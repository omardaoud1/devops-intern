name: ci-multiservice

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
        working-directory: ./backend

      - name: Run tests
        run: npm test
        working-directory: ./backend

      - name: Build Docker image
        run: docker build -t doctor-backend:latest ./backend

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Log in to Azure Container Registry
        run: az acr login --name ${{ secrets.AZURE_REGISTRY_NAME }}

      - name: Push Docker image to ACR
        run: |
          docker tag doctor-backend:latest ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/doctor-backend:latest
          docker push ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/doctor-backend:latest

      - name: Set AKS context
        uses: azure/aks-set-context@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Deploy MongoDB
        run: |
          kubectl apply -f ./k8s/mongo-deployment.yml
          kubectl apply -f ./k8s/mongo-service.yml

      - name: Deploy backend to Kubernetes
        run: |
          kubectl apply -f ./k8s/backend-deployment.yml
          kubectl apply -f ./k8s/backend-service.yml

      - name: deploy ingress
        run: kubectl apply -f ./k8s/ingress.yml


  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: install dependencies
        run: npm install --legacy-peer-deps
        working-directory: ./frontend

      - name: build react app 
        run: npm run build
        working-directory: ./frontend

      # - name: run tests
      # run: npm test --watchAll=false
      # working-directory: ./frontend

      - name: build docker image 
        run: docker build -t doctor-frontend:latest ./frontend

      - name: login to azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        run: az acr login --name ${{ secrets.AZURE_REGISTRY_NAME }}


      - name: Push Docker image to ACR
        run: |
          docker tag doctor-frontend:latest ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/doctor-frontend:latest
          docker push ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/doctor-frontend:latest

      - name: Set AKS context
        uses: azure/aks-set-context@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}


      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'


      - name: Deploy frontend to Kubernetes
        run: |
          kubectl apply -f ./k8s/frontend-deployment.yml
          kubectl apply -f ./k8s/frontend-service.yml

